{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object", 
  "properties": {
    "environments": {
      "type": "array",
      "description": "A list of “environment” groups that contain key value pairs defining variables that are applied to each configuration in a the CMakeSettings.json.",
      "items": {
        "type": "object",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "A way to categorize a list of “environment” groups. Allows it to be referenced later. Example: ‘env’ which would be referenced later as ‘env.variablename’. Default is ‘env’ if not specified."
          },
          "environment": {
            "type": "string",
            "description": "A unique identifier for this group of variables. Allows the group to be inherited later in an 'inheritEnvironments' entry."
          },
          "groupPriority": {
            "type": "integer",
            "description": "The priority of these variables when evaluating them. Higher number items are evaluated first."
          },
          "inheritEnvironments": {
            "type": "array",
            "description": "_A set of environments that are inherited by this group.    \r\nAny custom environment can be used, or these predefined environments:\r\nlinux_arm: Target ARM Linux remotely.\r\nlinux_x64: Target x64 Linux remotely.\r\nlinux_x86: Target x86 Linux remotely.\r\nmsvc_arm: Target ARM Windows with the MSVC compiler.\r\nmsvc_arm_x64: Target ARM Windows with the 64-bit MSVC compiler.\r\nmsvc_arm64: Target ARM64 Windows with the MSVC compiler.\r\nmsvc_arm64_x64: Target ARM64 Windows with the 64-bit MSVC compiler.\r\nmsvc_x64: Target x64 Windows with the MSVC compiler.\r\nmsvc_x64_x64: Target x64 Windows with the 64-bit MSVC compiler.\r\nmsvc_x86: Target x86 Windows with the MSVC compiler.\r\nmsvc_x86_x64: Target x86 Windows with the 64-bit MSVC compiler.",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": ["linux_arm", "linux_x64", "linux_x86", "msvc_arm", "msvc_arm_x64", "msvc_arm64", "msvc_arm64_x64", "msvc_x64", "msvc_x64_x64", "msvc_x86", "msvc_x86_x64"]
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        }
      }
    },
    "configurations": {
      "type": "array",
      "description": "A list of CMake configurations that apply to the CMakeLists.txt file in the same folder.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The configuration name."
          },
          "description": {
            "type": "string",
            "description": "Description of this configuration"
          },
                    "generator": {
            "type": "string",
            "description": "The CMake generator name. Example: Visual Studio 15 2017.",
            "enum": [
                            "Visual Studio 15 2017",
              "Visual Studio 15 2017 Win64",
              "Visual Studio 15 2017 ARM",
              "Visual Studio 14 2015",
              "Visual Studio 14 2015 Win64",
              "Visual Studio 14 2015 ARM",

              "Ninja"
            ]
          },

          "configurationType": {
            "type": "string",
            "description": "Specifies build type configuration for the selected generator.",
            "enum": [
              "Debug",
              "Release",
              "MinSizeRel",
              "RelWithDebInfo"
            ]
          },
          "inheritEnvironments": {
            "type": "array",
            "description": "_The environments this configuration depends on. \r\nAny custom environment can be used, or these predefined environments:\r\nlinux_arm: Target ARM Linux remotely.\r\nlinux_x64: Target x64 Linux remotely.\r\nlinux_x86: Target x86 Linux remotely.\r\nmsvc_arm: Target ARM Windows with the MSVC compiler.\r\nmsvc_arm_x64: Target ARM Windows with the 64-bit MSVC compiler.\r\nmsvc_arm64: Target ARM64 Windows with the MSVC compiler.\r\nmsvc_arm64_x64: Target ARM64 Windows with the 64-bit MSVC compiler.\r\nmsvc_x64: Target x64 Windows with the MSVC compiler.\r\nmsvc_x64_x64: Target x64 Windows with the 64-bit MSVC compiler.\r\nmsvc_x86: Target x86 Windows with the MSVC compiler.\r\nmsvc_x86_x64: Target x86 Windows with the 64-bit MSVC compiler.",
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": ["linux_arm", "linux_x64", "linux_x86", "msvc_arm", "msvc_arm_x64", "msvc_arm64", "msvc_arm64_x64", "msvc_x64", "msvc_x64_x64", "msvc_x86", "msvc_x86_x64"]
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "buildRoot": {
            "type": "string",
            "description": "The directory in which CMake generates build scripts for the chosen generator. Supported macros include ${workspaceRoot}, ${workspaceHash}, ${projectFile}, ${projectDir}, ${thisFile}, ${thisFileDir}, ${name}, ${generator}, ${env.VARIABLE}."
          },
          "installRoot": {
            "type": "string",
            "description": "The directory in which CMake generates install targets for the chosen generator. Supported macros include ${workspaceRoot}, ${workspaceHash}, ${projectFile}, ${projectDir}, ${thisFile}, ${thisFileDir}, ${name}, ${generator}, ${env.VARIABLE}."
          },
          "cmakeCommandArgs": {
            "type": "string",
            "description": "Additional command line options passed to CMake when invoked to generate the cache."
          },
          "buildCommandArgs": {
            "type": "string",
            "description": "Native build switches passed to CMake after --build --."
          },
          "ctestCommandArgs": {
            "type": "string",
            "description": "Additional command line options passed to CTest when running the tests."
          },
          "codeAnalysisRuleset": {
            "type": "string",
            "description": "Ruleset to use when running code analysis. This can be a full path or the file name of a ruleset file installed by Visual Studio."
          },
          "intelliSenseMode": {
            "type": "string",
            "description": "Mode used for computing intellisense information",
            "enum": [
            "windows-msvc-x86",
            "windows-msvc-x64",
            "windows-msvc-arm",
            "windows-msvc-arm64",
            "android-clang-x86",
            "android-clang-x64",
            "android-clang-arm",
            "android-clang-arm64",
            "ios-clang-x86",
            "ios-clang-x64",
            "ios-clang-arm",
            "ios-clang-arm64",
            "windows-clang-x86",
            "windows-clang-x64",
            "windows-clang-arm",
            "windows-clang-arm64",
            "linux-gcc-x86",
            "linux-gcc-x64",
            "linux-gcc-arm"
            ]
          },
          
          "variables": {
            "type": "array",
            "description": "A list of CMake variables. The name value pairs are passed to CMake as -Dname1=value1 -Dname2=value2, etc.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The variable name."
                },
                "value": {
                  "type": "string",
                  "description": "The variable value."
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          },
          "environments": {
            "type": "array",
            "description": "A list of “environment” groups that contain key value pairs defining variables that are applied to this configuration in the CMakeSettings.json.",
            "items": {
              "type": "object",
              "properties": {
                "namespace": {
                  "type": "string",
                  "description": "A unique identifier for the set of variables. Allows it to be referenced later. Example: ‘env’ which would be referenced later as ‘env.variablename’. Default is ‘env’ if not specified."
                },
                "environment": {
                  "type": "string",
                  "description": "A unique identifier for this group of variables. Allows the group to be inherited later in an 'inheritEnvironments' entry."
                },
                "groupPriority": {
                  "type": "integer",
                  "description": "The priority of these variables when evaluating them. Higher number items are evaluated first."
                },
                "inheritEnvironments": {
                  "type": "array",
                  "description": "_A set of environments that are inherited by this group.    \r\nAny custom environment can be used, or these predefined environments:\r\nlinux_arm: Target ARM Linux remotely.\r\nlinux_x64: Target x64 Linux remotely.\r\nlinux_x86: Target x86 Linux remotely.\r\nmsvc_arm: Target ARM Windows with the MSVC compiler.\r\nmsvc_arm_x64: Target ARM Windows with the 64-bit MSVC compiler.\r\nmsvc_arm64: Target ARM64 Windows with the MSVC compiler.\r\nmsvc_arm64_x64: Target ARM64 Windows with the 64-bit MSVC compiler.\r\nmsvc_x64: Target x64 Windows with the MSVC compiler.\r\nmsvc_x64_x64: Target x64 Windows with the 64-bit MSVC compiler.\r\nmsvc_x86: Target x86 Windows with the MSVC compiler.\r\nmsvc_x86_x64: Target x86 Windows with the 64-bit MSVC compiler.",
                  "items": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": ["linux_arm", "linux_x64", "linux_x86", "msvc_arm", "msvc_arm_x64", "msvc_arm64", "msvc_arm64_x64", "msvc_x64", "msvc_x64_x64", "msvc_x86", "msvc_x86_x64"]
                      },
                      {
                        "type": "string"
                      }
                    ]
                  }
                }
              },
              "additionalProperties": { "type": "string" },
              "minProperties": 1
            }
          }
},
        "additionalProperties": false
      }
    }
  }
}